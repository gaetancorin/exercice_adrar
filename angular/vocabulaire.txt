• IDE = environnement de développement
• CLI d'angular = command line interface d'angular= c'est l'interface de commande angular
• un flag = cela correspond a un option de configuration passé a une commande en ligne de commande(--style=scss)
• SPA = single page application
• AppComponent = c'est le component principal à la racine de l'arborescence des components de notre application
• AppModule = c'est le module principal de notre application
• @quelquechose = quand on voit @quelquechose avant une déclaration de classe en typescript, on appelle ca un décorateur. Il vient apporter des modifications a une classe.
• fichier de style = fichiers scss d'un component
• fichier template = fichier html d'un component
• un comportement ts = fichier typescript 
• le sélecteur d'un component = c'est  la balise HTML personnalisée qu'on utilisera pour insérer le component dans l'application.( préfixe app- par défault)
• data-binding = liaison de données, le fait de faire voyager(lier) des attributs typescripts vers des templates html
• méthode ngOninit = méthode appellé à la création d'une instance d'un component qui sert à initialiser les propriétés de cette instance avec des informations prédéfinis.
• Pour initialiser des propriétés typescript dans une class de component en utilisant ngOneInit, il faut mettre un !, sinon typescipt considère que la propriété n'est pas initialisé et l'IDE râle.
• string-interpolation = ce sont les {{ }} dans la page html(le template) de l'instance permettant d'accéder à ses propriétés.
• attribute binding ou liaison par attribut = ce sont des [attribut] = "nomPropriété" au lieu de attribut = "{{ nomPropriété}}". Cela permet de lier un attribut html à une propriété d'instance de component peut importe son type.
• implémenter une interface = respecter les méthodes, implémente les méthodes que l'interface nécessite d'avoir

• Event-biding = liaison par évenement, (autre direction du data-biding), c'est le fait de lier des méthodes typescripts à des évenements HTML